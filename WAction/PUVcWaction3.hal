external function Boolean PUVcRowEFActiveCheck(string,Integer,Integer,Integer);
external function Boolean PUVcEFActiveTest(Integer,Integer,record PUVc);

global
function Boolean  AllowCurChange(string curcode,Boolean base)
BEGIN
  record CurncyCodeVc ccr;
  Boolean res;
  
  res = true;
  if (nonblank(curcode)) then begin
    ccr.CurncyCode = curcode;
    if (ReadFirstMain(ccr,1,true)) then begin
      if (base) then begin
        if (ccr.NoChangeBase!=0) then begin res = false; end;
      end else begin
        if (ccr.NoChangeForeign!=0) then begin res  = false; end;
      end;
    end;
  end;
  AllowCurChange = res;
  RETURN;
END;

global
function Boolean PUVcEFActiveCheck(string fieldname,Integer wn,Integer wnst)
BEGIN
  Boolean res;
  record PUVc PUr;
  record PUVc oldPUr;
  Integer updatemode;

  updatemode = 2;//Rs_update
  res = true;
  GetWindowRecord(wn,PUr);
  switch (fieldname) begin
    case "Comment": ;
    case "FrRate": 
      if (PUr.OKFlag!=0) then begin
        res = false;
      end else begin
        if (AllowCurChange(PUr.CurncyCode,false)==false) then begin res = false; end;
      end;
    case "ToRateB1": 
      if (PUr.OKFlag!=0) then begin
        res = false;
      end else begin
        if (AllowCurChange(PUr.CurncyCode,false)==false) then begin res = false; end;
      end;
    case "ToRateB2": 
      if (PUr.OKFlag!=0) then begin
        res = false;
      end else begin
        if (AllowCurChange(PUr.CurncyCode,false)==false) then begin res = false; end;
      end;
    case "BaseRate1": 
      if (PUr.OKFlag!=0) then begin
        res = false;
      end else begin
        if (AllowCurChange(PUr.CurncyCode,true)==false) then begin res = false; end;
      end;
    case "BaseRate2": 
      if (PUr.OKFlag!=0) then begin
        res = false;
      end else begin
        if (AllowCurChange(PUr.CurncyCode,true)==false) then begin res = false; end;
      end;
    case "ShipCost": 
      if (wnst==updatemode) then begin
        if (PUr.OKFlag!=0) then begin
          res = PUVcEFActiveTest(wn,-1,PUr);
        end;  
      end;  
    case "CustomsCost": 
      if (wnst==updatemode) then begin
        if (PUr.OKFlag!=0) then begin
          res = PUVcEFActiveTest(wn,-1,PUr);
        end;  
      end;  
    case "LangCode": res = true;
    case "VECode":
       if (PUr.PONr>0) then begin res = false; end;
    otherwise
      if (wnst==updatemode) then begin
        GetPrevWindowRecord(wn,PUr);
        if (PUr.OKFlag!=0) then begin
          res = false;
        end;  
      end;  
  end;
  PUVcEFActiveCheck = res;
  RETURN;
END;

global
function Boolean PUDClassActiveEditField(Integer wn,string fieldname,Integer fn,Integer wnst,Integer rownr,Integer changed)
BEGIN
  Boolean res;
  Integer nwn;
  
  nwn = FindWindow("SelectApproverWClass");
  if (nwn>0) then begin
    if (MotherWindow(nwn)==wn) then begin
      res = false;
      goto LPUDClassActiveEditField;
    end;
  end;
  
  if (CurrentUser=="SA1" and fieldname=="LocOKNr") then begin		//Edit----------------------Dima  21.01.2016
			res = true;
			goto LPUDClassActiveEditField;
	end;
	  
  if (rownr==-1) then begin
    res = PUVcEFActiveCheck(fieldname,wn,wnst);
  end else begin
    res = PUVcRowEFActiveCheck(fieldname,wn,wnst,rownr);
  end;
LPUDClassActiveEditField:;
  PUDClassActiveEditField = res;
  RETURN;
END;


