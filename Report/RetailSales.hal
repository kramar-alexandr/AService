external procedure CurValToOtherCur(Date,string,val,string,var val,roundmode);external procedure CollectCostMyInvoice(record IVVc, integer,var array val,var array val,var array string,var array val,var array date,var array string,var array string,var array val,var integer,integer,longint,var array val,var array val,var array val,var array val, var array val,var array val,var array string,var array string,var array string,record BaseCurBlock); //Edit***************************Sasha2,15:24 23.04.2015external function val CalcSumForSales(val,val,val,val,val,integer, val,boolean);external function string 200 ValToMyString(val,integer);external procedure ExtractObj(string,var Integer,var string);external procedure GetFullCurncyRate (var string,Date,var val,var val,var val,var val,var val);SetLangMode(LangUkrainian,"UKR",0);procedure OutPutData(date perdate,string object,val datesum,val datesumcurr,val monthsum,val monthsumcurr,boolean repextended)begin  integer pos;        startformat(15);      pos = 0;				  outstring(pos,0,perdate,false);		  if (repextended) then begin		    outstring(pos+=50,0,object,false);		  end;			outstring(pos+=50,0,ValToMyString(datesum,2),false);			outstring(pos+=50,0,ValToMyString(datesumcurr,2),false);			outstring(pos+=50,0,ValToMyString(monthsum,2),false);			outstring(pos+=50,0,ValToMyString(monthsumcurr,2),false);		endformat;    return;end;global //Edit***************************Sasha2,15:13 29.01.2015 {procedure RetailSalesRn(record RcVc RepSpec)begin  record IVVc IVr;	row IVVc IVrw;	record CUVc CUr;  record LocalMachineAccBlock LMAccB;  row LocalMachineAccBlock LMAccBw;  integer mtrw,i,j,cred,pos,ressize,objcnt,extractpos;  boolean TrHs,testf,repextended;  val invfr,invto1,invto2,invbr1,invbr2,foundqty,t,sumcur,sumusd;  longint CredInvNo;  date sd,ed,tempdate;  vector longint objectsqueue;  array string 40 objectslist;  string 20 tstr,curobject,extrobj;  array val datesum,datesumcurr,monthsum,monthsumcurr;  array val rate,qty,cost,curcost;  array date indate;  array string 100 vecode,serial,curncy;  roundmode rnd; //Edit***************************Sasha2,10:58 16.02.2015  string 255 objectsstring,invcurncy; //Edit***************************Sasha2,18:01 17.02.2015  record BaseCurBlock BCb;	array val realcostbase,realcostuah,realpricebase,realsumbase,realpriceuah,realsumuah;	array string 5 uahpurate,uahcurrate;	array string 100 comment;		blockload(BCb);	  rnd = DefaultValRoundoff; //Edit***************************Sasha2,17:40 10.02.2015  rnd.decimals = 2; //Edit***************************Sasha2,17:40 10.02.2015  rnd.step = kRoundingStepNone; //Edit***************************Sasha2,17:40 10.02.2015  rnd.mode = kRoundingModeHalfUp; //Edit***************************Sasha2,17:40 10.02.2015    sd = RepSpec.sStartDate;	ed = RepSpec.sEndDate;		if (RepSpec.ArtMode==1) then begin	 repextended = true;	end else begin	 repextended = false;	end;    startreportnoheaderjob("Звіт по роздрібному продажу");    startformat(15);      pos = 0;				  outstring(pos,0,"Дата",false);		  if (repextended) then begin		    outstring(pos+=50,0,"Магазин",false);		  end;			outstring(pos+=50,0,"Сума,грн.",false);			outstring(pos+=50,0,"Сума,$",false);			outstring(pos+=50,0,"Всього міс,грн.",false);			outstring(pos+=50,0,"Всього міс,$",false);		endformat;				BlockLoad(LMAccB);		mtrw = MatRowCnt(LMAccB);		if (repextended) then begin		  objcnt = 0;		  if (blank(RepSpec.f1)) then begin		    for (i=0;i<mtrw;i=i+1) begin  		    MatRowGet(LMAccB,i,LMAccBw);  		    if (NonBlank(LMAccBw.Objects) and objectsqueue[LMAccBw.Objects]==-1) then begin  		      objectsqueue[LMAccBw.Objects] = objcnt;  		      objectslist[objcnt] = LMAccBw.Objects;  		      objcnt = objcnt + 1;  		    end;  		  end;		  end else begin //Edit***************************Sasha2,10:26 03.06.2015 {		    extractpos=0;        ExtractObj(RepSpec.f1,extractpos,extrobj);        while (nonblank(extrobj)) begin          if (objectsqueue[extrobj]==-1) then begin  		      objectsqueue[extrobj] = objcnt;  		      objectslist[objcnt] = extrobj;  		      objcnt = objcnt + 1;  		    end;          ExtractObj(RepSpec.f1,extractpos,extrobj);        end;		  end; //Edit***************************Sasha2,10:26 03.06.2015 }		end else begin		  if (blank(RepSpec.f1)) then begin		    for (i=0;i<mtrw;i=i+1) begin  		    MatRowGet(LMAccB,i,LMAccBw);  		    if (NonBlank(LMAccBw.Objects)) then begin  		      if (Blank(objectsstring)) then begin  		        objectsstring = LMAccBw.Objects;  		      end else begin  		        objectsstring = objectsstring & "," & LMAccBw.Objects;  		      end;  		    end;  		  end;		  end else begin //Edit***************************Sasha2,10:26 03.06.2015 {		    objectsstring = RepSpec.f1;		  end; //Edit***************************Sasha2,10:26 03.06.2015 }		  objcnt = 1;		  curobject = "allobjs";		  objectsqueue[curobject] = 0;		  objectslist[0] = "allobjs";		end;				ClearArray(datesum);		ClearArray(datesumcurr);		ClearArray(monthsum);		ClearArray(monthsumcurr);		TrHs = true;  	IVr.InvDate = sd;  	while(loopkey("InvDate",IVr,1,TrHs)) begin  		testf = true;  		if(IVr.InvDate>ed)then begin TrHs = false; testf = false; end;  		if(IVr.Invalid==1)then begin testf = false; end;  		if(IVr.OKFlag==0)then begin testf = false; end;  		  		cred = 1;  		if(IVr.InvType==3) then begin         cred=-1;        matRowGet(IVr,0,IVrw);        if(IVrw.stp==3) then begin          CredInvNo = IVrw.OrdRow;        end;      end;            curobject = "";			if(nonblank(IVr.Objects))then begin				pos = 0;				tstr = "";				ExtractObj(IVr.Objects,pos,tstr);				While (nonblank(tstr)) begin				  if (repextended) then begin						if(nonblank(tstr) and objectsqueue[tstr]>-1)then begin						  curobject = tstr;						  pos = 255;						end;					end else begin 					  if(nonblank(tstr) and SetInSet(tstr,objectsstring))then begin						  curobject = "allobjs";						  pos = 255; 						end;					end;					ExtractObj(IVr.Objects,pos,tstr);				end;			end;						if (blank(curobject)) then begin			  testf = false;			end;      If(testf) then begin        if (NonBlankDate(tempdate)) then begin          for (i=0;i<objcnt;i=i+1) begin            if (tempdate!=IVr.InvDate) then begin              //if (datesum[i]<>0) then begin                OutPutData(tempdate,objectslist[i],datesum[i],datesumcurr[i],monthsum[i],monthsumcurr[i],repextended);              //end;              datesum[i] = 0;		          datesumcurr[i] = 0;            end;            if (GetMonth(tempdate)!=GetMonth(IVr.InvDate)) then begin              monthsum[i] = 0;		          monthsumcurr[i] = 0;            end;          end;        end;			  invfr = IVr.FrRate;  			invto1 = IVr.ToRateB1;  			if(IVr.CurncyCode==BCb.BaseCur2)then begin					invfr = IVr.BaseRate2;					invto1 = IVr.BaseRate1;				end;  			if(invfr==0 or invto1==0)then begin  				invfr = 1;  				invto1 = 1;  			end;  						  mtrw = matrowcnt(IVr);			  For(i=0;i<mtrw;i=i+1) begin			    matrowget(IVr,i,IVrw);			    if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin			      CollectCostMyInvoice(IVr,i,cost,curcost,curncy,rate,indate,vecode,serial,qty,ressize,cred,CredInvNo,realcostbase,realcostuah,realpricebase,realpriceuah,realsumbase,realsumuah,uahpurate,uahcurrate,comment,BCb);			      foundqty = 0;  					For(j=0;j<ressize;j=j+1) begin  						foundqty = foundqty + qty[j];  					end;  					For(j=0;j<ressize;j=j+1) begin	  							invfr = IVr.FrRate;								invto1 = IVr.ToRateB1;								if(IVr.CurncyCode==BCb.BaseCur2)then begin									invfr = IVr.BaseRate2;									invto1 = IVr.BaseRate1;								end;								if(invfr==0 or invto1==0)then begin									invfr = 1;									invto1 = 1;								end;								if(left(IVr.CurncyCode,3)=="UAH")then begin									If(vecode[j]=="ERC")then begin										invcurncy = "UAH_E";										GetFullCurncyRate(invcurncy,IVr.InvDate,invfr,invto1,invto2,invbr1,invbr2);									end;								end;  							if (Left(IVr.CurncyCode,3)=="UAH") then begin  							  sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false);  							end else begin  							  CUr.Code = IVr.CustCode;			            readfirstmain(CUr,1,true);  							  if (IVr.CurncyCode=="USD") then begin  							    //sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false);  							    CurValToOtherCur(indate[j],IVr.CurncyCode,sumcur,CUr.CurncyCode,t,DefaultCurRoundOff);  							    sumcur = t;  							  end else begin  							    if (Left(IVr.CurncyCode,3)=="EUR") then begin  							      //sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false);  							      CurValToOtherCur(indate[j],IVr.CurncyCode,sumcur,"USD",t,DefaultCurRoundOff);  							      sumcur = t;  							      CurValToOtherCur(indate[j],"USD",sumcur,CUr.CurncyCode,t,DefaultCurRoundOff);  							      sumcur = t;   							    end;  							  end;  							end;  							  							sumusd = realsumbase[j];  							sumcur = realsumuah[j];  							  							/*if(curncy[j]=="USD")then begin  								sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],invfr,invto1,cred,foundqty,false);  							end else begin  								if(IVr.CurncyCode=="USD")then begin  									sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false);  								end else begin  									//sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false);  									CurValToOtherCur(indate[j],IVr.CurncyCode,sumusd,"USD",t,DefaultCurRoundOff);  									sumusd = t;  									If(vecode[j]=="ERC" and left(IVr.CurncyCode,3)=="UAH")then begin  										CurValToOtherCur(IVr.InvDate,"UAH_E",sumusd,"USD",t,DefaultCurRoundOff);// Edit ************************** Monday, 20 April 2015 11:53:20											sumusd = t;  									end;  								end;  							end;*/  							  							if(curncy[j]=="USD")then begin									sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],invfr,invto1,cred,foundqty,false); //Edit***************************Sasha2,8:58 02.02.2015									sumusd = Round(sumusd,rnd); //Edit***************************Sasha2,10:45 16.02.2015								end else begin									if(IVr.CurncyCode=="USD")then begin										sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false); //Edit***************************Sasha2,8:58 02.02.2015									end else begin										sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,qty[j],1,1,cred,foundqty,false); //Edit***************************Sasha2,8:58 02.02.2015										CurValToOtherCur(indate[j],IVr.CurncyCode,sumusd,"USD",t,DefaultCurRoundOff);										sumusd = t;										If(vecode[j]=="ERC" and left(IVr.CurncyCode,3)=="UAH")then begin											CurValToOtherCur(IVr.InvDate,"UAH_E",sumusd,"USD",t,DefaultCurRoundOff);// Edit ************************** Monday, 20 April 2015 11:53:20											sumusd = t;										end;									end;									sumusd = Round(sumusd,rnd); //Edit***************************Sasha2,10:46 16.02.2015								end;  							sumusd = realsumbase[j];  							sumcur = realsumuah[j];  							    					  sumusd = Round(sumusd,rnd);    					  datesum[objectsqueue[curobject]] = datesum[objectsqueue[curobject]] + sumcur;    					  monthsum[objectsqueue[curobject]] = monthsum[objectsqueue[curobject]] + sumcur;    					  datesumcurr[objectsqueue[curobject]] = datesumcurr[objectsqueue[curobject]] + sumusd;    					  monthsumcurr[objectsqueue[curobject]] = monthsumcurr[objectsqueue[curobject]] + sumusd;  					end;  					  					if(foundqty*cred<IVrw.Quant)then begin  							if (Left(IVr.CurncyCode,3)=="UAH") then begin  							  sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,0,1,1,cred,foundqty,true);  							end else begin  							  if (IVr.CurncyCode=="USD") then begin  							    sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,0,invto1,invfr,cred,foundqty,true);  							  end else begin  							    if (Left(IVr.CurncyCode,3)=="EUR") then begin  							      sumcur = CalcSumForSales(IVrw.Sum,IVrw.Quant,0,invto1,invfr,cred,foundqty,true);  							      CurValToOtherCur(IVr.InvDate,"USD",sumcur,CUr.CurncyCode,t,DefaultCurRoundOff);  							      sumcur = t;  							    end;  							  end;  							end;  							sumusd = CalcSumForSales(IVrw.Sum,IVrw.Quant,0,invfr,invto1,cred,foundqty,true);  							  							sumusd = realsumbase[j];  							sumcur = realsumuah[j];  														  sumusd = Round(sumusd,rnd);							  datesum[objectsqueue[curobject]] = datesum[objectsqueue[curobject]] + sumcur;							  monthsum[objectsqueue[curobject]] = monthsum[objectsqueue[curobject]] + sumcur;					      datesumcurr[objectsqueue[curobject]] = datesumcurr[objectsqueue[curobject]] + sumusd;					      monthsumcurr[objectsqueue[curobject]] = monthsumcurr[objectsqueue[curobject]] + sumusd;  					end;			    end;			  end;        tempdate = IVr.InvDate;      end;    end;		for (i=0;i<objcnt;i=i+1) begin		  //if (datesum[i]<>0) then begin		    OutPutData(tempdate,objectslist[i],datesum[i],datesumcurr[i],monthsum[i],monthsumcurr[i],repextended);		  //end;    end;	endjob;return;end; //Edit***************************Sasha2,15:14 29.01.2015 }global procedure RetailSalesEn()beginstring 50 filename;record RcVc RepSpec;date ds,de;	de = currentdate;	if(getmonth(addday(de,-1))!=getmonth(de))then begin		de = addday(de,-1);		ds = stringtodate("01/" & getmonth(de) & "/" & getyear(de));	end else begin		ds = stringtodate("01/" & getmonth(de) & "/" & getyear(de));	end;	switch(currentcompany)begin                  	case 1: filename = "Reports/1/RetailSalesDetailed.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=1;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									filename = "Reports/1/RetailSalesShort.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									RunProgram("Reports/1/RetailSales.sh","");														case 10: filename = "Reports/10/RetailSalesDetailed.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=1;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									filename = "Reports/10/RetailSalesShort.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									RunProgram("Reports/10/RetailSales.sh","");         						case 4: filename = "Reports/4/RetailSalesDetailed.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=1;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									filename = "Reports/4/RetailSalesShort.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RetailSalesRn(RepSpec);									closefile;									RunProgram("Reports/4/RetailSales.sh","");								case 6: filename = "Reports/6/RetailSalesDetailedOL.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=1;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RepSpec.f1 = "OLMST,OLM,K_OFFICE";									RetailSalesRn(RepSpec);									RepSpec.f1 = "";									closefile;									filename = "Reports/6/RetailSalesShortOL.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RepSpec.f1 = "OLMST,OLM,K_OFFICE";									RetailSalesRn(RepSpec);									RepSpec.f1 = "";									closefile;									RunProgram("Reports/6/RetailSalesOL.sh","");																		filename = "Reports/6/RetailSalesDetailedOP.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=1;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RepSpec.f1 = "K_OP,K_OP_ST,K_OFFICE";									RetailSalesRn(RepSpec);									RepSpec.f1 = "";									closefile;									filename = "Reports/6/RetailSalesShortOP.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RepSpec.f1 = "K_OP,K_OP_ST,K_OFFICE";									RetailSalesRn(RepSpec);									RepSpec.f1 = "";									closefile;									RunProgram("Reports/6/RetailSalesOP.sh","");								case 9:   filename = "Reports/9/RetailSalesShortSamsung.xls";          				delete_file(filename);									CreateFile(filename);									closefile;									millisleep(100);									openexportfile(filename,true);									ReportDefaults(RepSpec,"RetailSalesRClass");									RepSpec.ArtMode=0;									RepSpec.sStartDate = ds;									RepSpec.sEndDate = de;									RepSpec.f1 = "K_OL,K_OL_ST";									RetailSalesRn(RepSpec);									RepSpec.f1 = "";									closefile;									RunProgram("Reports/9/RetailSalesSamsung.sh","");				        end;return;end;