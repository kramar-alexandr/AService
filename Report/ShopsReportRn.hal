SetLangMode(LangUkrainian,"UKR",0);external procedure CollectSerials(var record StockMovVc,string,string,integer);external procedure ExtractObj(string,var Integer,var string);remote procedure CollectSerials(var record StockMovVc,string,string,integer); //Edit***************************Sasha2,12:03 04.11.2014procedure PopulateShopsReport(record ORVc ORr,row ORVc ORrw,record INVc INr,string serialnr)begin  integer outpos;  val qty;  	  	outpos = 0;  	qty = -1;	startformat(15);				outstring(outpos,0,ORr.CustCode,false);		outstring(outpos+=30,0,ORr.Addr0,false); 		outstring(outpos+=40,"DblORVc",ORr.SerNr,false);		outstring(outpos+=20,0,ORr.OrderClass,false); 		outstring(outpos+=20,0,ORr.Location,false);		outstring(outpos+=20,0,ORr.OrdDate,false);		outstring(outpos+=30,0,ORrw.ArtCode,false);		outstring(outpos+=30,0,ORrw.Spec,false);		if (Nonblank(serialnr)) then begin			outstring(outpos+=50,0,serialnr,false);			outstring(outpos+=30,0,"1",false);			qty = 1;		end else begin			outstring(outpos+=50,0,serialnr,false);			outstring(outpos+=30,0,ORrw.Shopd,false);			qty = ORrw.Shopd;			end; 		outstring(outpos+=30,0,ORrw.Price,false);		outstring(outpos+=30,0,ORrw.vRebate,false);		outstring(outpos+=30,0,(ORrw.Sum/ORrw.Quant)*qty,false);		outstring(outpos+=30,0,ORr.CurncyCode,false);		outstring(outpos+=30,0,ORr.SalesMan,false);		outstring(outpos+=30,0,INr.Group,false);	endformat;  return;end;global procedure ShopsReportRn(record RcVc RepSpec)begin	integer i,j,k,mtrw,outpos,ORrow,pos,rwcnt1,sercnt;	record ORVc ORr;	row ORVc ORrw;	boolean TrHs,testf,TrHs1,testf1;	date sd,ed;	record StockMovVc StockMovr,StockMov2r;	row StockMovVc StockMovrw,StockMov2rw; 	record RetVc Retr; 	row RetVc Retrw; 	record SHVc SHr; 	row SHVc SHrw; 	record ItemHistVc IHr; 	record INVc INr;	string 20 curitem,previtem,brand; 	record DIVc DIr;		if (Blank(RepSpec.f3)) then begin		goto LOut;	end;		sd = RepSpec.sStartDate;	ed = RepSpec.sEndDate;	outpos = 0;		startreportnoheaderjob("Визначте звіт по Shops");		startformat(15);					outstring(outpos,0,USetStr(2354),false); //Клієнт			outstring(outpos+=30,0,USetStr(2326),false); // Найменування			outstring(outpos+=40,0,USetStr(2407),false); //Рахунок			outstring(outpos+=20,0,USetStr(5332),false); //Вид			outstring(outpos+=20,0,USetStr(2569),false); //Склад			outstring(outpos+=20,0,USetStr(2353),false); //Дата			outstring(outpos+=30,0,USetStr(3523),false); //Товар			outstring(outpos+=30,0,USetStr(3364),false); //опис			outstring(outpos+=50,0,USetStr(5018),false); //Серійний номер			outstring(outpos+=30,0,USetStr(5279),false); //Кількість			outstring(outpos+=30,0,USetStr(4846),false); //Ціна за од.			outstring(outpos+=30,0,USetStr(2449),false); //Знижка			outstring(outpos+=30,0,USetStr(3556),false); //Сума			outstring(outpos+=30,0,USetStr(16018),false); //Валюта			outstring(outpos+=30,0,USetStr(9342),false); //Менеджер			outstring(outpos+=30,0,USetStr(2338),false); //Група		endformat;							TrHs = true;		ORr.ShopsMark = 1;		while (LoopKey("ShopsMark",ORr,1,TrHs)) begin			testf = true;			if (ORr.ShopsMark==0) then begin TrHs = false; testf = false; end;			if (ORr.Location!=RepSpec.f3) then begin testf = false; end;			if (nonblank(RepSpec.f1) and !SetInSet(ORr.CustCode,RepSpec.f1)) then begin testf = false; end;			if (testf) then begin				mtrw = matrowcnt(ORr);				for (i=0;i<mtrw;i=i+1) begin					MatRowGet(ORr,i,ORrw);					testf = true;					if (nonblank(RepSpec.f2) and !SetInSet(ORrw.ArtCode,RepSpec.f2)) then begin testf = false;end;					if (Blank(ORrw.ArtCode) or ORrw.Shopd==0) then begin testf = false; end;					if (testf) then begin						INr.Code = ORrw.ArtCode;						ReadFirstMain(INr,1,true);						if (INr.SerNrf==0) then begin							PopulateShopsReport(ORr,ORrw,INr,"");						end else begin							RECORDNEW(StockMov2r);							TrHs1 = true;							StockMovr.OrderNr = ORr.SerNr;							while (LoopKey("OrderNr",StockMovr,1,TrHs1)) begin								testf1 = true;								if (StockMovr.OrderNr!=ORr.SerNr) then begin TrHs1 = false; testf1 = false; end;	  							if (/*StockMovr.OrdFlag!=1 or*/ StockMovr.OKFlag!=1) then begin testf1 = false; end;  								if (testf1) then begin			  						rwcnt1=MatRowCnt(StockMovr);			  						for (j=0;j<rwcnt1;j=j+1) begin			  							MatRowGet(StockMovr,j,StockMovrw);		  								testf1 = true;		  								if (StockMovrw.ArtCode!=ORrw.ArtCode or StockMovrw.ORRow!=i) then begin testf1 = false; end;		  								if (testf1) then begin											if (StockMovr.ToLocation==ORr.Location) then begin					  							if (NonBlank(StockMovrw.SerialNr)) then begin					  								CollectSerials(StockMov2r,StockMovrw.ArtCode,StockMovrw.SerialNr,1);					  							end;					  						end;					  						if (StockMovr.FrLocation==ORr.Location) then begin					  							if (NonBlank(StockMovrw.SerialNr)) then begin					  								CollectSerials(StockMov2r,StockMovrw.ArtCode,StockMovrw.SerialNr,-1);					  							end;					  						end; 										end;		  							end;		  						end;	  						end; RESETLOOP(StockMovr);		  								  					SHr.OrderNr = ORr.SerNr;							TrHs1 = true;							while (LoopKey("OrderKey",SHr,1,TrHs1)) begin								testf1 = true;								if (SHr.OrderNr!=ORr.SerNr) then begin TrHs1 = false; testf1 = false; end;								if (SHr.OKFlag!=1) then begin testf1 = false; end;								if (testf1) then begin									rwcnt1=MatRowCnt(SHr);									for (j=0;j<rwcnt1;j=j+1) begin										MatRowGet(SHr,j,SHrw);										testf1 = true; 										if (SHrw.ArtCode!=ORrw.ArtCode or SHrw.OrdRow!=i) then begin testf1 = false; end;										if (testf1) then begin					  						if (NonBlank(SHrw.SerialNr)) then begin				  								CollectSerials(StockMov2r,SHrw.ArtCode,SHrw.SerialNr,-1);				  							end; 										end;									end;								end;							end; RESETLOOP(SHr);														Retr.OrdNr = ORr.SerNr;							TrHs1 = true;							while (LoopKey("OrdNr",Retr,1,TrHs1)) begin								testf1 = true;								if (Retr.OrdNr!=ORr.SerNr) then begin TrHs1 = false;testf1 = false; end;								if (Retr.OKFlag!=1 or Retr.Location!=ORr.Location) then begin testf1 = false; end;								if (testf1) then begin									rwcnt1=MatRowCnt(Retr);									for (j=0;j<rwcnt1;j=j+1) begin										MatRowGet(Retr,j,Retrw);										testf1 = true;										if (Retrw.ArtCode!=ORrw.ArtCode or Retrw.OrdRow!=i) then begin testf1 = false; end;										if (testf1) then begin					  						if (NonBlank(Retrw.SerialNr)) then begin				  								CollectSerials(StockMov2r,Retrw.ArtCode,Retrw.SerialNr,1);				  							end;										end;									end;								end;							end; RESETLOOP(Retr);														sercnt = MatRowCnt(StockMov2r);  							for (k=0;k<sercnt;k=k+1) begin  								MatRowGet(StockMov2r,k,StockMov2rw);  								if (StockMov2rw.Quant>0) then begin	  									PopulateShopsReport(ORr,ORrw,INr,StockMov2rw.SerialNr);			  					end;		  					end;												end;					end;				end;			end;		end;									LOut:;			/*TrHs = true;		ORr.OrdDate = sd;		while(loopkey("OrdDate",ORr,1,TrHs)) begin			testf = true;			if(ORr.OrdDate>ed)then begin TrHs = false; testf = false; end;			if(ORr.OKFlag==0)then begin testf = false; end;			if(ORr.OrderClass!="Shops")then begin testf = false; end;			if(NonBlank(RepSpec.f1) and !SetInSet(ORr.CustCode,RepSpec.f1))then begin testf = false; end;					If(testf) then begin				RECORDNEW(StockMov2r);				StockMovr.OrderNr = ORr.SerNr;			  	if (ReadFirstKey("OrderNr",StockMovr,1,true)) then begin				mtrw = matrowcnt(ORr);					For(i=0;i<mtrw;i=i+1) begin						testf = true;						itemqty = 0;						matrowget(ORr,i,ORrw);						if(blank(ORrw.ArtCode) or (ORrw.Quant - ORrw.Shipd2)==0)then begin testf = false; end;						if(nonblank(RepSpec.f2) and !SetInSet(ORrw.ArtCode,RepSpec.f2))then begin testf = false; end;						if (testf) then begin		  						while (LoopKey("OrderNr",StockMovr,1,true)) begin		  							if (StockMovr.OKFlag==1 and StockMovr.OrderNr==ORr.SerNr) then begin				  						rwcnt1=MatRowCnt(StockMovr);				  						for (j=0;j<rwcnt1;j=j+1) begin				  							MatRowGet(StockMovr,j,StockMovrw);			  								testf1 = true;			  								if (StockMovrw.ArtCode!=ORrw.ArtCode or StockMovrw.ORRow!=i) then begin testf1 = false; end;			  								if (testf1) then begin												if (StockMovr.ToLocation==ORr.Location) then begin						  							itemqty = itemqty + StockMovrw.Quant;						  							if (NonBlank(StockMovrw.SerialNr)) then begin						  								CollectSerials(StockMov2r,StockMovrw.ArtCode,StockMovrw.SerialNr,1);						  							end;						  						end;						  						if (StockMovr.FrLocation==ORr.Location) then begin						  							itemqty = itemqty - StockMovrw.Quant;						  							if (NonBlank(StockMovrw.SerialNr)) then begin						  								CollectSerials(StockMov2r,StockMovrw.ArtCode,StockMovrw.SerialNr,-1);						  							end;						  						end; 											end;			  							end;			  						end;		  						end; RESETLOOP(StockMovr);		  								  					SHr.OrderNr = ORr.SerNr;							TrHs = true;							while (LoopKey("OrderKey",SHr,1,TrHs)) begin								if (SHr.OKFlag==1 and SHr.OrderNr==ORr.SerNr) then begin									rwcnt1=MatRowCnt(SHr);									for (j=0;j<rwcnt1;j=j+1) begin										MatRowGet(SHr,j,SHrw);										testf1 = true; 										if (SHrw.ArtCode!=ORrw.ArtCode or SHrw.OrdRow!=i) then begin testf1 = false; end;										if (testf1) then begin					  						itemqty = itemqty - SHrw.Ship;					  						if (NonBlank(SHrw.SerialNr)) then begin				  								CollectSerials(StockMov2r,SHrw.ArtCode,SHrw.SerialNr,-1);				  							end; 										end;									end;								end;							end; RESETLOOP(SHr);														Retr.OrdNr = ORr.SerNr;							TrHs = true;							while (LoopKey("OrdNr",Retr,1,TrHs)) begin								if (Retr.OKFlag==1 and Retr.OrdNr==ORr.SerNr and Retr.Location==ORr.Location) then begin									rwcnt1=MatRowCnt(Retr);									for (j=0;j<rwcnt1;j=j+1) begin										MatRowGet(Retr,j,Retrw);										testf1 = true;										if (Retrw.ArtCode!=ORrw.ArtCode or Retrw.OrdRow!=i) then begin testf1 = false; end;										if (testf1) then begin					  						itemqty = itemqty + Retrw.Quant;					  						if (NonBlank(Retrw.SerialNr)) then begin				  								CollectSerials(StockMov2r,Retrw.ArtCode,Retrw.SerialNr,1);				  							end;										end;									end;								end;							end; RESETLOOP(Retr);				  					if (itemqty > 0) then begin		  						INr.Code = ORrw.ArtCode;		  						ReadFirstMain(INr,1,true);		  						if (INr.SerNrf == 1) then begin		  							sercnt = MatRowCnt(StockMov2r);		  							for (k=0;k<sercnt;k=k+1) begin		  								MatRowGet(StockMov2r,k,StockMov2rw);		  								if (StockMov2rw.ArtCode==ORrw.ArtCode and StockMov2rw.Quant>0) then begin			  									outpos = 0;					  						startformat(15);														outstring(outpos,0,ORr.CustCode,false);												outstring(outpos+=30,0,ORr.Addr0,false); 												outstring(outpos+=40,"DblORVc",ORr.SerNr,false);												outstring(outpos+=30,0,ORr.OrderClass,false); 												outstring(outpos+=30,0,ORr.Location,false);												outstring(outpos+=30,0,ORr.OrdDate,false);												outstring(outpos+=30,0,ORrw.ArtCode,false);												outstring(outpos+=30,0,ORrw.Spec,false);												outstring(outpos+=50,0,StockMov2rw.SerialNr,false);												outstring(outpos+=30,0,"1",false); 												outstring(outpos+=30,0,ORrw.Price,false);												outstring(outpos+=30,0,ORrw.vRebate,false);												outstring(outpos+=30,0,ORr.CurncyCode,false);												outstring(outpos+=30,0,ORr.SalesMan,false);												outstring(outpos+=30,0,INr.DispGroups,false);											endformat;						  					end;				  					end;				  					end else begin									outpos = 0;			  						startformat(15);												outstring(outpos,0,ORr.CustCode,false);										outstring(outpos+=30,0,ORr.Addr0,false); 										outstring(outpos+=40,"DblORVc",ORr.SerNr,false);										outstring(outpos+=30,0,ORr.OrderClass,false); 										outstring(outpos+=30,0,ORr.Location,false);										outstring(outpos+=30,0,ORr.OrdDate,false);										outstring(outpos+=30,0,ORrw.ArtCode,false);										outstring(outpos+=30,0,ORrw.Spec,false);										outstring(outpos+=50,0,ORrw.SerialNr,false);										outstring(outpos+=30,0,itemqty,false); 										outstring(outpos+=30,0,ORrw.Price,false);										outstring(outpos+=30,0,ORrw.vRebate,false);										outstring(outpos+=30,0,ORr.CurncyCode,false);										outstring(outpos+=30,0,ORr.SalesMan,false);										outstring(outpos+=30,0,INr.DispGroups,false);									endformat;			  					end;			  					end;						end;	  					end;				end;				 			end; 		end;*/		endjob;return;end;global procedure ShopsReportEn() //Edit***************************Sasha2,17:25 02.09.2014 {beginrecord RcVc RepSpec;integer compno;  compno = CurrentCompany;  if(GetDateID(currentdate)==1 or GetDateID(currentdate)==3)then begin		switch (compno) begin		case 2: delete_file("Stock/ITEKUAShopsReport.xls");						CreateFile("Stock/ITEKUAShopsReport.xls");						closefile;						openexportfile("Stock/ITEKUAShopsReport.xls",true);						RepSpec.f3 = "INV_OUT";						ShopsReportRn(RepSpec);						RunProgram("Stock/ITEKUAShopsReport.sh", "");					  closefile;					  		case 4: delete_file("Stock/ICShopsReport.xls");						CreateFile("Stock/ICShopsReport.xls");						closefile;						openexportfile("Stock/ICShopsReport.xls",true);						RepSpec.f3 = "INV_OUT";						ShopsReportRn(RepSpec);						RunProgram("Stock/ICShopsReport.sh", "");					  closefile;					  		case 5: delete_file("Stock/TXTShopsReportTX.xls");						CreateFile("Stock/TXTShopsReportTX.xls");						closefile;						openexportfile("Stock/TXTShopsReportTX.xls",true);						RepSpec.f3 = "INV_OUT_TX";						ShopsReportRn(RepSpec);						RunProgram("Stock/TXTShopsReportTX.sh", "");					  closefile;																		delete_file("Stock/TXTShopsReportPH.xls");						CreateFile("Stock/TXTShopsReportPH.xls");						closefile;						openexportfile("Stock/TXTShopsReportPH.xls",true);						RepSpec.f3 = "INV_OUT_PH";						ShopsReportRn(RepSpec);						RunProgram("Stock/TXTShopsReportPH.sh", "");					  closefile;				/*case 7: delete_file("Stock/TNMShopsReport.xls");						CreateFile("Stock/TNMShopsReport.xls");						closefile;						openexportfile("Stock/TNMShopsReport.xls",true);						ShopsReportRn(RepSpec);						RunProgram("Stock/TNMShopsReport.sh", "");*/		end;  end;return;end; //Edit***************************Sasha2,17:25 02.09.2014 }//Edit***************************Sasha2,9:47 05.11.2014 {procedure CollectShopsItems(var record ORVc ORr,string item,string spec,string serialnr,integer qty)begin  Integer i,rwcnt,pos;  row ORVc ORrw;  string 50 serial;  Boolean foundf;    foundf = false;  serial = serialnr;  rwcnt = MatRowCnt(ORr);  for (i=0;i<rwcnt;i=i+1) begin  	MatRowGet(ORr,i,ORrw);    if (item==ORrw.ArtCode and serial==ORrw.SerialNr) then begin      pos = i;      foundf = true;      i = rwcnt;    end;  end;  if (foundf==false) then begin    pos = rwcnt;    ORrw.SerialNr = serial;    ORrw.ArtCode = item;    ORrw.Spec = spec;    ORrw.Quant = 0;  end;  ORrw.Quant = ORrw.Quant + qty;  MatRowPut(ORr,pos,ORrw);  return;end; //Edit***************************Sasha2,9:47 05.11.2014 }//Edit***************************Sasha2,17:55 04.11.2014 {global procedure CheckInvalidShopsItemsRn(record RcVc RepSpec)begin	integer i,mtrw,outpos;	record ORVc ORr,OR2r;	row ORVc ORrw,OR2rw;	record StockMovVc StockMovr;	row StockMovVc StockMovrw;	record SDVc SDr;	row SDVc SDrw;	boolean TrHs,testf;	string 20 location;		if (Blank(RepSpec.f3)) then begin		goto LOutt;	end;		location = RepSpec.f3;	outpos = 0;		startreportnoheaderjob("Визначте звіт");			startformat(15);					outstring(outpos,0,USetStr(3523),false); //Товар			outstring(outpos+=70,0,USetStr(3364),false); //опис			outstring(outpos+=250,0,USetStr(5018),false); //Серійний номер			outstring(outpos+=70,0,USetStr(5279),false); //Кількість			outstring(outpos+=40,0,USetStr(2569),false); //Склад		endformat;			RECORDNEW(OR2r);	TrHs = true;	StockMovr.OrderNr = -1;	while (LoopKey("OrderNr",StockMovr,1,TrHs)) begin		testf = true;  		if (StockMovr.OrderNr!=-1) then begin testf = false; TrHs = false; end;  		if (StockMovr.ToLocation!=location and StockMovr.FrLocation!=location) then begin testf = false; end;  		if (/*StockMovr.OrdFlag!=1 or*/ StockMovr.OKFlag!=1) then begin testf = false; end;  		if (testf) then begin  			mtrw = MatRowCnt(StockMovr);  			for (i=0;i<mtrw;i=i+1) begin  				MatRowGet(StockMovr,i,StockMovrw);  				if (NonBlank(StockMovrw.ArtCode)) then begin  					if (StockMovr.ToLocation==location) then begin						CollectShopsItems(OR2r,StockMovrw.ArtCode,StockMovrw.Spec,StockMovrw.SerialNr,StockMovrw.Quant);					end;					if (StockMovr.FrLocation==location) then begin						CollectShopsItems(OR2r,StockMovrw.ArtCode,StockMovrw.Spec,StockMovrw.SerialNr,-StockMovrw.Quant);					end;  				end;  			end;  		end;	end;		TrHs = true;	SDr.Location = location;	SDr.OKFlag = 1;	while (LoopKey("LocOK",SDr,2,TrHs)) begin		testf = true;  		if (SDr.Location!=location or SDr.OKFlag!=1) then begin testf = false; TrHs = false; end;  		if (testf) then begin  			mtrw = MatRowCnt(SDr);  			for (i=0;i<mtrw;i=i+1) begin  				MatRowGet(SDr,i,SDrw);  				if (NonBlank(SDrw.ArtCode)) then begin					CollectShopsItems(OR2r,SDrw.ArtCode,SDrw.Spec,SDrw.SerialNr,-SDrw.Qty);  				end;  			end;  		end;	end;		mtrw = MatRowCnt(OR2r);	for (i=0;i<mtrw;i=i+1) begin		MatRowGet(OR2r,i,OR2rw);		if (OR2rw.Quant<>0) then begin			outpos = 0;				startformat(15);						outstring(outpos,0,OR2rw.ArtCode,false); //Товар				outstring(outpos+=70,0,OR2rw.Spec,false); //опис				outstring(outpos+=250,0,OR2rw.SerialNr,false); //Серійний номер				outstring(outpos+=70,0,OR2rw.Quant,false); //Кількість				outstring(outpos+=40,0,location,false); //Склад			endformat;		end;	end;	LOutt:;  endjob;    return;end; //Edit***************************Sasha2,17:55 04.11.2014 }